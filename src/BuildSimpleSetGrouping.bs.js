// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("BuildSimpleSetGrouping");

function make(exercises, _, _$1) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              return React.createElement("form", undefined, React.createElement("div", {
                              className: "form-group"
                            }, React.createElement("select", {
                                  className: "form-control mb-2 mr-sm-2",
                                  onChange: (function (_event) {
                                      return Curry._1(send, /* UpdateExercise */Block.__(0, [_event.target.value]));
                                    })
                                }, Belt_List.toArray(List.map((function (e) {
                                            return React.createElement("option", {
                                                        key: String(e[/* id */0]),
                                                        value: String(e[/* id */0])
                                                      }, e[/* name */1]);
                                          }), exercises)))), React.createElement("div", {
                              className: "form-group"
                            }, React.createElement("label", undefined, "Resistance"), React.createElement("input", {
                                  className: "form-control",
                                  id: "resistanceInput",
                                  value: Pervasives.string_of_float(state[/* resistance */4])
                                })), React.createElement("div", {
                              className: "form-group"
                            }, React.createElement("label", undefined, "Reps"), React.createElement("input", {
                                  className: "form-control",
                                  id: "repsInput",
                                  value: String(state[/* reps */0])
                                })), React.createElement("div", {
                              className: "form-group"
                            }, React.createElement("label", undefined, "Sets"), React.createElement("input", {
                                  className: "form-control",
                                  id: "setsInput",
                                  value: String(state[/* setsCount */2])
                                })), React.createElement("button", {
                              className: "btn btn-primary",
                              type: "button"
                            }, "Complete Set!"));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* reps */10,
                      /* setRest */40,
                      /* setsCount */4,
                      /* selectedExercise */undefined,
                      /* resistance */0.0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* reps */state[/* reps */0],
                                /* setRest */state[/* setRest */1],
                                /* setsCount */state[/* setsCount */2],
                                /* selectedExercise */action[0],
                                /* resistance */state[/* resistance */4]
                              ]]);
                case 1 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* reps */Caml_format.caml_int_of_string(action[0]),
                                /* setRest */state[/* setRest */1],
                                /* setsCount */state[/* setsCount */2],
                                /* selectedExercise */state[/* selectedExercise */3],
                                /* resistance */state[/* resistance */4]
                              ]]);
                case 2 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* reps */state[/* reps */0],
                                /* setRest */state[/* setRest */1],
                                /* setsCount */state[/* setsCount */2],
                                /* selectedExercise */state[/* selectedExercise */3],
                                /* resistance */Caml_format.caml_float_of_string(action[0])
                              ]]);
                
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
